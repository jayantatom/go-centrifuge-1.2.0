package resources

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _go_centrifuge_build_configs_default_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdb\x6e\xdb\x30\xd2\xbe\xd7\x53\x0c\x9c\x9b\xf6\x47\x6b\x5b\xf2\x21\x8e\x80\xff\xc2\xb1\x13\x37\xcd\x61\x9d\xd8\x4d\xda\xde\x2c\x68\x6a\x24\xb1\x96\x48\x95\xa4\x7c\xc8\xd3\x2f\x86\x92\x9c\xa4\x69\xb7\xbb\x5d\xec\x02\x0b\x6c\x6e\x22\x90\x9c\x6f\x86\x33\xdf\x1c\xe8\x23\x98\x62\xcc\xca\xcc\x42\x84\x1b\xcc\x54\x91\xa3\xb4\x60\xd1\x58\x89\x16\x58\xc2\x84\x34\x16\xd6\x6a\xc3\xa4\xc7\x51\x5a\x2d\xe2\x32\xc1\x1b\xb4\x5b\xa5\xd7\x21\xc4\x99\x90\xd6\x73\x20\x42\x22\xd8\x14\x21\xaa\xf1\x64\x75\xc6\x80\x4d\x99\x85\xc9\x41\x16\x72\x26\xa4\x25\x5c\xaf\x39\x12\x7a\x00\x47\x70\xa5\x38\xcb\x9c\x6a\x21\x13\xe0\x4a\x5a\xcd\xb8\x05\x16\x45\x1a\x8d\x41\x03\x12\x31\x02\xab\x60\x85\x60\xd0\xc2\x56\xd8\x14\x50\x6e\x60\xc3\xb4\x60\xab\x0c\x4d\xdb\x83\x46\x9e\x20\x01\x44\x14\x42\xaf\xd7\x73\xdf\x68\x53\xd4\x58\xe6\xb5\xed\x17\x51\x08\xa3\xde\xa8\xda\x5b\x29\x65\x8d\xd5\xac\x98\x23\x6a\x53\xc9\xbe\x87\x56\x47\x14\xfd\x8e\x1f\x1c\xb7\xbb\xed\x6e\xdb\xef\x58\x5e\x74\x7a\xa3\xa0\x1b\x74\x44\x11\x9b\xce\x6d\xbe\xbc\xdd\xad\xb6\xeb\xf2\xeb\x97\x2f\xd3\xb8\x7c\x5c\xae\x76\x67\xe3\x3b\x5c\xde\x4c\xae\xd4\xe3\x7e\x3f\x18\x8c\x36\xb7\x32\xb9\xdf\xcc\xaf\xbf\x5d\x7d\x59\xb7\x7e\x03\xda\x6b\x40\xef\xe3\xe1\xd9\xcd\x30\x5f\x7f\x7f\xc0\x6f\x0f\x97\x0f\xc1\xf7\x79\xe9\x0f\x3f\x17\xd1\xac\xb7\xfe\xa8\xfc\x65\x2f\x4f\x59\x3a\x3f\x1d\x2c\x70\x20\xfd\x0a\xb4\x71\xd5\xb8\xf1\x54\x75\x01\xba\x3e\x4a\x2b\xec\xfe\x9c\x71\xab\xf4\x3e\x84\x56\xcb\x73\xae\xbe\x66\x42\xbe\x0a\x78\x13\x31\x78\x73\x49\xe1\x7e\xeb\x41\x15\xde\x0a\xed\x08\x6e\xca\x1c\xb5\xe0\x70\x31\x05\x15\xbb\x50\x3f\x0b\x6a\x2d\x7b\xf0\xba\x1f\xd4\x52\xa7\x8d\x6b\x21\x13\xc6\x92\xa4\x54\x11\xbe\x66\x45\xa1\xd5\x46\xb8\x0d\xe5\xb0\x9d\xea\x86\x88\xbf\x0d\x52\x6f\xd0\x0e\xfa\x41\x3b\xe8\x75\xdb\xbe\x3f\xfc\x31\x52\x7e\x30\xed\x5d\x2a\xf5\xb0\x58\xed\x56\x97\x93\xd5\xd7\xf4\xe4\xe3\xbd\x35\xb7\xfb\xfb\x59\xb4\x9c\x6b\xd6\xbf\x2b\x16\xe3\xbe\x5d\x6d\xcc\x90\x49\xdf\xff\xb6\x9d\x8d\x83\xc7\xd6\x2b\xfc\x5e\xbf\x7d\x1c\xb4\xfd\xe0\xf8\x57\xf0\xb7\x79\xc0\x17\xb9\x3e\x13\x6c\x71\x7d\xdf\x4f\x3e\x6d\x8e\x1f\x66\x69\x91\xdc\x6d\xd5\x68\xab\xce\x17\xe6\x43\xfa\x75\xb6\x9a\x89\x1e\x1b\x8f\x76\xad\xda\x3d\x67\x35\x2b\x0f\xce\xbf\x98\xc2\x7b\x70\x01\xf8\x15\x6b\xfb\x8d\x6b\xaf\x98\x0b\x5b\x84\x45\xa6\xf6\x18\xc1\x22\x67\xda\xc2\xa4\x66\x83\x81\x58\x69\xe7\xca\x44\x6c\x50\xbe\x70\xe5\x3f\xc1\x98\xee\xce\xef\x0d\x83\x33\x7e\x1a\x8f\x86\xc7\x27\x41\xbf\x77\x16\xf4\xe3\x71\xf7\x6c\xd2\x0f\x06\x51\x80\x7e\x77\xdc\x1d\x05\x41\x8f\x1f\x4f\x9f\x73\xcb\x58\x96\x50\x16\xbf\xa6\x14\xcb\x57\xa8\xff\x8c\x52\xfe\xbf\x48\x29\xa7\xfa\xb7\x94\xfa\xf7\x93\xea\x7f\xb4\xfa\x43\x5a\x51\x4b\x7a\x62\x45\x5e\xad\xfc\x19\x97\xba\xff\x48\x49\xf1\x4f\x46\x6d\x3f\x08\xda\xbe\xff\xcb\xe0\x8c\x93\xde\x19\x1f\x5b\xfd\xe5\x7e\xb2\xdb\x3e\x0e\xd7\x43\xb3\x3c\x11\x5f\x17\x77\x8f\xf6\xf1\x64\x7a\xbc\xff\xf4\x58\x9c\xce\xef\xce\xce\x1f\xf5\x27\x75\xff\xba\xa4\x10\xbb\x02\xbf\xed\xfb\xaf\x9a\x4b\x83\x7f\x39\xdb\x8a\xdd\x67\x94\xe5\xe7\xf1\xfd\xf7\xf5\xc7\xcb\x5c\x7e\x58\x8c\x3f\x4e\xbf\x3d\xc6\xc7\x38\xbb\x56\x43\xab\x95\x48\xbe\xee\xf2\xe3\xf1\xe0\xee\xef\x07\xbf\x76\xd7\xaf\xc2\xef\xff\x67\xa3\x3f\x3e\xef\x0f\x86\xdc\x1f\xf6\x46\x43\x36\xec\xc7\x51\xff\xbc\xbf\x1a\x9e\xb0\xd8\xef\xb1\xd1\x70\x1a\x77\x4f\x07\xc3\x60\xcc\xba\xdd\x96\x47\xd3\x05\xb3\x0c\x16\x56\x69\x96\xa0\x67\xaa\xff\xd5\xcc\x30\x67\x36\x75\x26\x65\xd4\xcc\xa6\xa7\x10\x8b\x0c\x3d\x80\x82\xd9\x34\x84\x8e\xcd\x8b\xce\xd3\xd4\xf2\xd7\x88\x59\xd6\x76\x27\xa3\x15\xe1\x4e\x94\x8c\x45\x52\x6a\x66\x85\x92\x07\x05\xdc\xad\x2e\xfe\x5c\x4d\x05\xf0\x4a\xdb\x98\x73\x55\x4a\x6b\x60\x8d\x7b\xa8\x6f\xe1\xb1\x7a\x91\xf4\xac\x71\x4f\xcb\x58\x23\x36\x5b\x24\x7b\x21\x2d\xea\x98\x71\x84\x2d\x45\xce\x45\x60\x3c\xbf\x00\x26\x23\x98\x07\x73\x58\xa0\xde\xa0\x76\xf5\x10\x25\x15\x3c\x8f\x4a\xe2\x07\x65\xac\x64\x39\x52\x3b\xae\xe7\x0d\xef\x08\xe6\x4a\xdb\x1a\x86\x20\x7e\x2e\x4a\x87\x42\x18\x75\x47\x01\xa9\xa7\xf4\x78\x6f\xd5\xfb\x02\x51\x03\x7f\xee\x35\xe3\x15\x41\x51\x39\x69\x51\x20\x17\xf1\x1e\xce\x76\x16\xb5\x64\x19\x5c\xcc\x9f\x59\x4b\xa0\xc0\x99\xa4\xe9\x4d\x23\xe3\x29\x46\xc0\x2c\x88\x18\x56\x98\x0a\x19\xc1\xcd\x78\x49\x30\x58\x4b\x5f\xcc\x43\xd8\xb6\x77\xed\x7d\xfb\xb1\x0a\x01\x59\x5d\x1a\x8c\x0e\x0c\xa4\x7b\x67\x6c\x8f\x9a\x02\xe1\xcc\x75\xf9\xe3\x4e\x2f\x45\x8e\xaa\x74\xd7\x94\xa0\x0a\x94\xf5\x48\x29\x91\x3b\xab\xa9\x25\xd0\x65\x8c\x07\xcd\x72\x2d\x12\x42\xab\xd7\x35\x2d\x87\x92\x0b\x29\xf2\x32\x87\x08\x33\xb6\x77\x7a\x71\x83\x7a\x0f\x45\x50\x80\x46\x53\x28\x69\x90\x90\xd8\x46\x89\x08\xac\xc8\x49\x0b\xb3\x96\xf1\xb5\x71\x00\x2c\xfa\x56\x1a\x0b\x2b\x46\x76\x2b\x09\xa9\x32\x96\x24\x55\xa9\x39\x1a\x78\xb3\x58\x4c\xdf\xc1\x64\xfe\xe9\x1d\x70\xa5\xd1\x40\xbb\xdd\x7e\x5b\xcf\xc2\x6a\x0d\x42\x42\xa6\x12\x97\x72\x21\xb4\xc8\x3e\xb2\xd5\x94\x39\x46\xb0\xda\xd3\xb5\xaa\x18\xb4\xc8\x8b\xbb\xff\x7f\xb3\x61\x59\x89\x77\xc8\x22\xf8\x3f\x08\xde\x82\x30\x90\xa1\x71\x6d\x51\x82\xdb\x83\x15\x66\x6a\xfb\x8e\xbc\x27\x81\xa7\x4c\x26\x78\xb8\xc7\xd4\xdd\xd1\x2a\xd8\x79\xf0\x72\x31\x84\xd6\xa0\xdb\xcd\x8d\x4b\xc5\xdb\x12\x4b\xfc\x81\x02\xce\x33\xcc\xec\x25\x4f\xb5\x92\xaa\x34\xd4\x79\x39\x1a\x23\x64\xe2\x7d\x27\x81\x8a\x20\xd5\x23\xc1\x54\x74\x28\x5d\x33\x56\x31\x50\x01\x42\x6d\x3a\xf5\xd5\x74\xdd\xc7\xb7\x22\xcb\x88\x2b\x2c\xcb\x14\x67\xb6\x62\x8b\xb1\x4c\xdb\xb2\xf0\x80\xe4\x1f\x2a\x41\x2a\xe6\x5d\x87\x7f\xae\x11\x0d\x94\x05\x79\x14\xf8\x9e\x67\x68\x2a\x02\x54\x2a\xc8\x21\x5b\x26\xdc\xeb\xa2\x8e\x25\x65\x17\xd4\xdb\x0f\x4c\x38\x0e\x5c\x2f\xaa\x62\x78\x04\xe3\x9c\xf2\xcf\x75\x13\xf2\x3d\x03\xcb\xcc\x9a\x50\x36\x2c\x13\x11\xc4\x5a\xe5\xee\x2e\x5c\xa3\x73\x84\x07\xd5\xce\xb9\x8b\x97\x1f\xa4\x2d\xcf\x55\x19\x94\x76\x92\xba\xa9\xc8\x65\x88\xe0\x2f\xfd\xe7\xde\x55\xee\x00\xb9\x89\xf2\xe4\xd3\xdd\x55\x08\x5b\x13\x76\x9e\xde\x09\xe1\xc9\x49\xbf\xef\xac\xba\xa1\x44\xb2\x9a\x49\xc3\x1c\x97\xa1\x50\x2a\x83\x9c\xed\x40\xa3\xd5\xa2\x1a\x77\x0c\xca\x88\x0c\x7e\x76\x4c\x6d\x5c\xa6\xe4\x6c\x77\x57\x9d\x0b\x21\xa8\x1d\xf7\x73\x48\x41\x35\x67\xc3\x32\x87\xbb\xaf\x3c\xc9\xc8\x74\x5e\x6a\xed\x1e\x0d\xcf\x24\x52\x66\x60\x85\x48\xaf\x0a\x8b\xdc\x62\xe4\xc1\x01\x80\xf4\x11\x8b\x82\x3a\xad\x9a\x17\x67\x26\x62\xac\x89\x69\x15\xe5\x76\xa5\x83\xab\x3c\x17\xd6\x85\x89\x49\x60\x92\xa7\x44\xaf\xfa\x25\xea\xfc\x8d\xd2\x72\xe7\xd0\xf7\xe0\xc3\x1e\x19\xdd\xab\x3a\x77\x25\x62\x34\x05\x93\x21\xb4\x46\xc7\xc3\x6e\xea\x38\x7b\xe8\x87\xbf\xf0\x7f\xd3\x0d\xeb\x32\x86\x19\x52\xa3\xdb\xa6\x82\xa7\x87\x4e\x09\x75\x35\x6e\x2c\xad\x47\x0c\x45\x7c\xae\xe7\xcc\x88\x12\xd6\xd9\x57\x1a\xab\xf2\x5a\x49\xd3\x2a\xea\x67\x71\xdd\x04\x6e\x5c\x55\x6e\x51\x4f\x6e\x1d\x1e\xbf\x55\x98\x2a\xe0\x83\x5e\x9e\x09\xf2\xb5\x2b\x9f\x6f\xb6\x94\xaf\xdf\x4b\xa1\x11\xb6\x06\x94\x06\x51\xf0\xfa\x45\x4c\x0f\x60\xfa\xe4\xcc\x92\xd9\x8e\xdb\x6f\x9f\xf3\x29\xb5\xb6\x08\x3b\x1d\xca\xa6\x8c\xea\x50\x78\x32\xe8\x0f\xaa\x32\xc7\x76\xae\xcc\x51\xaa\x6d\x31\x82\x84\xd1\x9d\x04\x77\x78\x45\x5d\xf9\x5e\x92\x49\x48\xd8\xa2\x70\xd2\x41\x17\x66\x5b\x14\x20\xd5\xb6\xa2\xd7\x8c\x99\x39\x49\x3b\x7e\x35\x7f\xee\xe8\x8c\x19\xc8\x44\x2e\xea\x31\x22\x12\x71\x8c\x8e\x49\x87\x08\x1d\x6a\x1a\xe5\x65\xc2\xcc\x95\x3b\xdd\x3c\xe6\x27\x94\x68\xe8\x12\xbe\xc6\xa4\xd5\x71\x14\x5d\xe2\x3e\x84\xde\xf3\xc5\x3b\xdc\xa8\x35\xba\xf5\xc1\xa0\x59\xae\x38\x32\x71\xfc\x0a\x61\xf4\xc3\xfa\x5c\x63\xb3\xe5\x3f\x41\xc9\xd8\x5e\xd3\x23\x18\x4e\x5e\xac\x2d\xc9\x19\x31\xea\x73\xad\xf2\x10\xfc\xc1\x61\x8f\x19\x83\x76\x51\xb5\xf1\xe1\x61\xb5\x28\x4d\xba\x54\x7f\xd1\x8c\x67\xd8\x40\xc1\xd1\xa1\xc8\x69\xcc\xd5\x86\x4a\x9c\x01\xa3\x94\xa4\xff\x2b\x2d\xa2\x04\xa9\xda\x50\x1a\x25\x9a\x55\x39\xf5\xd4\xda\xac\x72\xd5\xac\x0a\x8e\x7c\x22\xcc\xf3\x30\xd5\xd4\x88\xa2\xea\x87\x13\x06\xab\x4c\xf1\xb5\x9b\x1a\x2a\x86\x80\xd5\x22\x49\x50\x3b\x6c\x1a\xe0\x70\x67\x9b\x42\x58\x35\xc3\x61\xb7\xe9\x86\x3f\x53\xac\xa9\xdb\x28\x99\x3d\xeb\x46\xe6\x90\xab\x8d\x49\x4f\xd0\xd4\x9c\x5e\xc2\xfb\x83\x1a\xfd\xbf\xbf\xac\x2d\x53\x61\xc0\x60\x55\xb9\x0c\x4d\x55\x86\x02\x99\x97\x99\x15\x45\x26\xa8\xdb\xd1\xa0\xf5\x22\xbb\x9f\x52\x0d\x8d\x15\x79\xd3\x46\x12\x66\xae\x0f\x62\x21\xf8\xed\x2e\xd5\x31\x26\xf7\x10\xe1\xaa\x4c\x92\x7a\x9a\xa1\xf2\xe2\x28\x94\x28\x20\x40\xcf\xed\x56\x65\x0c\xa5\xab\x08\x6e\x85\xc6\x08\x92\xf1\x80\xbe\x42\x88\x59\x66\xd0\x9d\x2a\x0a\xad\xe2\x2a\x19\x1b\x60\x9a\xa6\x68\xb5\x39\xe6\x55\xd9\x51\xff\xa6\x56\x68\xe4\x75\x92\x58\x5d\xa2\xf7\xb7\x00\x00\x00\xff\xff\xda\xc2\x06\xd8\x40\x14\x00\x00")

func go_centrifuge_build_configs_default_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_default_config_yaml,
		"go-centrifuge/build/configs/default_config.yaml",
	)
}

var _go_centrifuge_build_configs_testing_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc9\x6e\x1c\x37\x10\xbd\xf7\x57\x10\xcc\xc1\x97\x59\xb8\x6f\x37\x43\xf1\x12\x08\x11\xe2\x38\x80\x9c\x63\x91\xac\x96\x1a\xa3\x5e\xc2\x66\x4b\x1e\x1b\xfe\xf7\xa0\x67\x46\xb6\x6f\x51\x6e\x64\x75\xbd\xf7\x58\xd5\xef\x25\x1c\x6a\xe9\xda\xe5\x0e\x6f\xb0\x3e\x8d\xe5\x10\x48\xc5\xb9\x76\xc3\x5d\x83\xf5\x1e\x0b\x2e\x7d\x68\x08\x81\x94\xc6\x65\xa8\xf3\x7a\x26\xa4\x87\x6e\x08\xe4\x74\x24\xe4\x80\xc7\x40\x5e\x7d\xa5\x90\x73\xc1\x79\xa6\x81\x3a\x1f\x19\x38\xa3\x9d\x4c\x4a\x29\x05\xa9\xcd\x96\x47\x65\x24\xb2\x2c\x93\xd6\x80\x5c\x71\x01\x9a\x6e\x68\x2a\xc7\xa9\x8e\x34\x7c\xa5\xa9\x9b\xee\xb1\xd0\x40\x01\xe7\x2d\x17\x6e\x9b\x6a\x59\x1b\x4e\xe5\x8a\x9f\x2b\x0d\x34\x59\xeb\x5b\x27\xad\xcf\xd6\xb2\xec\x45\x6a\x13\xcf\x39\x2b\x70\xad\xe4\x59\x03\x83\x9c\x5c\x2b\x80\x45\x01\x5c\x31\x2e\x2d\xcb\xd2\x48\xd6\x4a\x97\x58\x72\xf0\x9d\x6f\x82\x02\xfd\xbc\xca\x76\x8f\x34\x50\x69\x12\x37\x0e\xad\x8c\xad\x77\xac\x45\xab\x23\xb3\xc2\xb6\xce\x33\xb0\x1c\x32\xfd\xb6\xa1\x87\xdc\xd2\x40\xe7\xd3\x83\xe9\xe9\xfa\x83\x24\x1f\x1e\x70\xa0\x41\x8a\x0d\x1d\x68\x10\x46\x70\xa5\x36\x74\xa2\x81\x6f\x68\xa1\xc1\x6d\xe8\x0c\x0f\xeb\x00\x19\x79\x44\x6e\x50\x26\xef\xb8\x57\x2a\x73\x4c\x20\xa2\x8b\xc2\xa2\x42\x83\x2c\xea\xd8\x46\x25\x23\x32\x69\x0d\xe8\xec\x9c\xf3\x2d\x18\xeb\x41\x38\x2e\xc4\xfa\x90\x1e\xd2\xba\x8a\xc4\x85\x8b\x8e\x6b\xad\x75\x04\x8e\x90\x6d\x02\xf4\xcc\x30\x74\x4e\x09\x68\x13\x38\xa9\x4d\x66\x46\x69\x1d\xb3\x07\x6d\xb5\x88\x60\xda\x94\x98\x17\xd8\xae\x4c\x5d\xa6\x81\x2a\x8d\xcc\x30\x30\xdb\x2c\x00\xb7\x4a\x46\xb7\xf5\x42\xb4\x5b\xa5\x9c\xf0\xca\xfb\x2c\x6d\xa6\x1b\xfa\x88\x65\xee\xc6\x75\xc8\x6f\xaf\x2e\x3f\x7e\x82\x79\x7e\x1a\x4b\x0e\xe4\xd5\x73\xe9\xe2\x81\x40\x5e\x6a\x81\xa6\xe9\x32\x0e\xb5\xab\xc7\xdf\x72\x20\x94\x7d\x7e\xb1\x77\x9a\x66\xb5\xee\xd5\xfd\x6a\xc5\x1f\x06\x3d\xfb\xb3\x3b\x73\x65\x25\xb5\x97\xc9\x72\xdd\xe6\x2c\x79\x32\x9c\x2b\x0e\x31\x33\x05\xde\xb7\xd9\x38\x21\x92\xd3\xda\x39\xad\x52\xca\x28\x3d\x68\xe3\x14\x5a\xd0\x26\x83\xb0\x99\x9e\xc8\x66\x4c\x05\x6b\x20\x74\xbf\x7f\xfd\xd0\x25\x3c\x57\xbf\x4f\x4a\xf5\xbb\xf2\xf4\x08\x6f\xde\xea\x2f\x9f\xa2\x30\x6f\xbf\xf8\x92\x3e\x4c\xbf\xde\x7e\xd4\xf6\xaa\xbe\xf9\xf3\xfd\x74\x83\xf7\x9f\xae\xfe\x48\x37\xe3\xfb\x77\xd7\x4b\xfd\xf0\x37\x6d\x9a\x5f\xc8\xeb\x4b\x9e\xd6\xf4\x90\xb9\x8e\x05\xee\xb0\xf9\x39\x64\x07\x3c\xae\x65\x0c\x64\x5f\xfb\x69\xff\xfc\xa9\x69\xfe\x59\x70\xc1\xb5\x63\x58\xfa\xdb\xb1\x1c\xb0\xcc\x81\x88\x86\x90\xa7\xd3\xe5\x16\xba\xfa\x57\xd7\xe3\xef\x1f\x03\xe1\x4d\xb3\xd2\xac\xcd\x93\x98\xce\xab\x99\x96\xf8\xd0\xa5\xeb\x35\xb3\xbb\xdd\x7e\xb7\xdb\xc7\xa5\x7b\xc8\xfb\x82\xf3\xb8\x94\x84\xf3\x7e\x12\xd3\x35\x1e\x77\xd3\x12\x77\x13\xf6\x67\x4c\xe9\x1e\xa1\xe2\x7f\x83\x0e\x2b\xf0\x04\x9a\xbb\xbb\xa1\x1b\xee\x5e\xa8\x79\xe9\xfe\xff\xba\x3f\x01\x9f\xb5\x1b\x18\xd2\xfd\x58\x2e\xe2\x53\xc1\x34\xf6\x7d\x57\x03\xa9\x65\xc1\xe6\xdf\x00\x00\x00\xff\xff\xdc\x3c\xc5\xc4\xef\x04\x00\x00")

func go_centrifuge_build_configs_testing_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_testing_config_yaml,
		"go-centrifuge/build/configs/testing_config.yaml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"go-centrifuge/build/configs/default_config.yaml": go_centrifuge_build_configs_default_config_yaml,
	"go-centrifuge/build/configs/testing_config.yaml": go_centrifuge_build_configs_testing_config_yaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"go-centrifuge": &_bintree_t{nil, map[string]*_bintree_t{
		"build": &_bintree_t{nil, map[string]*_bintree_t{
			"configs": &_bintree_t{nil, map[string]*_bintree_t{
				"default_config.yaml": &_bintree_t{go_centrifuge_build_configs_default_config_yaml, map[string]*_bintree_t{}},
				"testing_config.yaml": &_bintree_t{go_centrifuge_build_configs_testing_config_yaml, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}
